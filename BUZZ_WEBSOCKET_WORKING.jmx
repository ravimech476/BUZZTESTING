<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="BUZZ Native WebSocket Working Test" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <stringProp name="TestPlan.comments">Working Native WebSocket test with hardcoded values</stringProp>
      <elementProp name="TestPlan.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      
      <!-- CSV Data Configuration -->
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="filename">websocket_test_users.csv</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">phoneNumber,userId,targetUserId,userName</stringProp>
      </CSVDataSet>
      <hashTree/>
      
      <!-- Thread Group -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="WebSocket Users" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">3</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <longProp name="ThreadGroup.duration">0</longProp>
      </ThreadGroup>
      <hashTree>
        
        <!-- WebSocket Open Connection with hardcoded values -->
        <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="Open WebSocket" enabled="true">
          <stringProp name="server">buzz.pazl.info</stringProp>
          <stringProp name="port">5000</stringProp>
          <stringProp name="path">/</stringProp>
          <stringProp name="protocol">ws</stringProp>
          <stringProp name="connectTimeout">10000</stringProp>
          <boolProp name="streamingConnection">false</boolProp>
          <elementProp name="argumentsPanel" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
        <hashTree/>
        
        <!-- Wait after connection -->
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Connection Wait" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        
        <!-- Register User -->
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Register User" enabled="true">
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="dataType">Text</stringProp>
          <stringProp name="requestData">{"type":"register","userId":"${userId}"}</stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        
        <!-- Wait after registration -->
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Registration Wait" enabled="true">
          <stringProp name="ConstantTimer.delay">3000</stringProp>
        </ConstantTimer>
        <hashTree/>
        
        <!-- Read any registration response -->
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="Read Registration Response" enabled="true">
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="dataType">Text</stringProp>
          <stringProp name="responseTimeout">5000</stringProp>
          <stringProp name="responsePattern">registered|User registered</stringProp>
          <boolProp name="binaryData">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree/>
        
        <!-- Trigger Call -->
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Trigger Call" enabled="true">
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="dataType">Text</stringProp>
          <stringProp name="requestData">{"type":"call","userId":"${userId}","targetId":"${targetUserId}"}</stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        
        <!-- Wait for call response -->
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Call Wait" enabled="true">
          <stringProp name="ConstantTimer.delay">5000</stringProp>
        </ConstantTimer>
        <hashTree/>
        
        <!-- Read call response -->
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="Read Call Response" enabled="true">
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="dataType">Text</stringProp>
          <stringProp name="responseTimeout">5000</stringProp>
          <stringProp name="responsePattern">incoming_call|Target not available|You are already in a call|Call setup failed</stringProp>
          <boolProp name="binaryData">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree/>
        
        <!-- Accept Call -->
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="Accept Call" enabled="true">
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="dataType">Text</stringProp>
          <stringProp name="requestData">{"type":"accept","userId":"${userId}","targetId":"${targetUserId}","id":"${userId}"}</stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        
        <!-- Wait for accept response -->
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Accept Wait" enabled="true">
          <stringProp name="ConstantTimer.delay">3000</stringProp>
        </ConstantTimer>
        <hashTree/>
        
        <!-- Read accept response -->
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="Read Accept Response" enabled="true">
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="dataType">Text</stringProp>
          <stringProp name="responseTimeout">3000</stringProp>
          <stringProp name="responsePattern">call_accepted|call_rejected|call_ended</stringProp>
          <boolProp name="binaryData">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree/>
        
        <!-- Close WebSocket Connection -->
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="Close WebSocket" enabled="true">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">5000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
        
      </hashTree>
      
      <!-- Simple Listeners -->
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
      </ResultCollector>
      <hashTree/>
      
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
      </ResultCollector>
      <hashTree/>
      
    </hashTree>
  </hashTree>
</jmeterTestPlan>