# BUZZ WebSocket Performance Testing Configuration
# =================================================

# WebSocket Server Configuration
websocket.server=buzz.pazl.info
websocket.port=3000
websocket.protocol=ws
websocket.path=/
websocket.connection.timeout=10000
websocket.heartbeat.interval=30000

# Test Execution Parameters
test.concurrent.users=20
test.ramp.time=60
test.duration=300
test.loop.count=-1

# Stress Test Parameters
stress.concurrent.users=100
stress.ramp.time=120
stress.duration=600

# Performance Thresholds
performance.connection.success.rate=95
performance.message.latency.ms=500
performance.call.setup.time.ms=2000
performance.heartbeat.response.ms=100
performance.connection.stability=99

# Stress Test Thresholds  
stress.connection.success.rate=90
stress.message.latency.ms=1000
stress.error.rate=5

# Test Data Configuration
test.users.csv=websocket_test_users.csv
test.users.count=20

# Results Configuration
results.directory=results
results.jtl.enabled=true
results.html.report.enabled=true
results.detailed.logging=true

# WebSocket Message Types for Testing
websocket.message.types=register,heartbeat,call,accept,reject,end_call,connection_check

# Call Flow Testing Parameters
call.simulation.accept.rate=80
call.simulation.reject.rate=20
call.duration.simulation.ms=15000
call.setup.wait.ms=3000
call.response.wait.ms=2000

# Connection Health Monitoring
health.check.interval=30000
health.check.enabled=true
ping.pong.testing=true

# Error Handling Configuration
error.retry.attempts=3
error.retry.delay.ms=1000
connection.recovery.enabled=true

# Logging Configuration
log.level=INFO
log.websocket.messages=true
log.performance.metrics=true
log.error.details=true